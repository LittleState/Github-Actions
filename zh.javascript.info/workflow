name: Build Offline Package

on:
  workflow_dispatch:

jobs:
  package:
    runs-on: windows-latest

    steps:
    - name: 初始化工作目录
      run: |
        # 使用临时目录而非 D 盘根目录
        $basePath = "$env:RUNNER_TEMP\js-offline"
        New-Item -Path $basePath -ItemType Directory -Force
        echo "BASE_PATH=$basePath" | Out-File -FilePath $env:GITHUB_ENV -Append

    - name: 克隆仓库
      run: |
        # 使用环境变量定义路径
        $basePath = $env:BASE_PATH
        
        # 克隆 server 仓库（自动创建目录）
        git clone https://github.com/javascript-tutorial/server "$basePath\server"
        
        # 克隆 engine 子模块
        git clone https://github.com/javascript-tutorial/engine "$basePath\server\modules\engine"
        
        # 创建 repo 目录并克隆内容
        New-Item -Path "$basePath\server\repo" -ItemType Directory -Force
        git clone https://github.com/javascript-tutorial/en.javascript.info "$basePath\server\repo\en.javascript.info"

    - name: 验证目录结构
      run: |
        # 关键文件检查
        $basePath = $env:BASE_PATH
        if (-not (Test-Path "$basePath\server\package.json")) {
          Write-Error "❌ Server 仓库克隆失败，缺少 package.json"
          exit 1
        }

    - name: 配置 npm 环境
      run: |
        $basePath = $env:BASE_PATH
        npm config set prefix "$basePath\npm-global"
        echo "$basePath\npm-global\bin" | Out-File -FilePath $env:GITHUB_PATH -Append

    - name: 安装全局依赖
      run: npm install -g bunyan gulp@4

    - name: 安装本地依赖
      run: |
        $basePath = $env:BASE_PATH
        cd "$basePath\server"
        npm install --loglevel verbose  # 添加详细日志

    - name: 打包离线文件
      run: |
        $basePath = $env:BASE_PATH
        Compress-Archive -Path "$basePath\*" -DestinationPath js-offline.zip

    - name: 上传产物
      uses: actions/upload-artifact@v2
      with:
        name: js-offline-package
        path: js-offline.zip
