name: Build Neovim

on:
  workflow_dispatch:

jobs:
  build:
    name: Build Neovim with Docker
    # runs-on: ubuntu-20.04
    runs-on: self-hosted
    env: 
      ACTIONS_STEP_DEBUG: true

    steps:
    - name: Check CPU and Memory Info
      run: |
        echo "CPU Info:"
        lscpu
        echo "Memory Info:"
        free -h
        echo "Disk Info:"
        df -h

    # 获取仓库
    - uses: actions/checkout@v4

    # 构建镜像
    - name: Build Docker Image
      shell: bash
      working-directory: ./neovim
      run: |
        docker build -t neovim-build .

    # 拷贝产物至宿主机
    - name: Copy Neovim binary to host
      run: |
        set -x
        ls -alh .
        pwd
        docker run -d --name extract --entrypoint sleep neovim-build 3600
        docker exec extract ls /neovim/build
        docker cp extract:/neovim/build/nvim-linux64.deb ./nvim
        ls -alh
        ls -alh ./nvim

    # 上传二进制产物
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: neovim-binary
        path: ./nvim

    # 清理
    - name: Clean up
      if: always()
      run: |
        docker stop extract && docker rm -v extract
